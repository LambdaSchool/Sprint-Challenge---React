{"ast":null,"code":"import _slicedToArray from \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport \"./components/App.scss\";\nimport PhotoCard from './components/PhotoCard'; // const App = () => {\n// Try to think through what state you'll need for this app before starting. Then build out\n// the state properties here.\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"first render\");\n    axios.get(\"https://swapi.co/api/people/?format=json\").then(res => {\n      let data = res.data;\n      setData(res.data);\n      data = Object.entries(data);\n      console.log('App.js -> %cdata:', 'color: blue', data).catch(error => {\n        console.error(\"index.js -> %c\\\"There's a data issue:\", \"color: red\", error);\n      });\n      console.log('App.js -> %cres.data:', 'color: green', data);\n    });\n  }, []); // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  // return (\n  //   <div className=\"App\">\n  //   <div className=\"photoCards\">\n  //       {data.map(data => (\n  //         <PhotoCard name={data.name} \n  //                           gender={data.gender} \n  //                           homeworld = {data.homeworld}\n  //                           url={data.url} /> \n  //       ))}\n  //     </div>\n  //     : <div>Loading...</div> \n  //   </div>\n  // );\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Repositories\\Sprint-Challenge-React-Wars\\src\\App.js"],"names":["React","useState","useEffect","axios","PhotoCard","App","data","setData","console","log","get","then","res","Object","entries","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;AACE;AACA;;AACF,SAASC,GAAT,GAAe;AAAA,oBAESJ,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAERK,IAFQ;AAAA,QAEFC,OAFE;;AAIfL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAU,0CAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAKN,IAAI,GAAGM,GAAG,CAACN,IAAhB;AACAC,MAAAA,OAAO,CAACK,GAAG,CAACN,IAAL,CAAP;AAEFA,MAAAA,IAAI,GAAGO,MAAM,CAACC,OAAP,CAAeR,IAAf,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,aAAjC,EAAgDH,IAAhD,EAICS,KAJD,CAIOC,KAAK,IAAI;AACdR,QAAAA,OAAO,CAACQ,KAAR,CAAc,uCAAd,EAAuD,YAAvD,EAAqEA,KAArE;AACD,OAND;AASER,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,cAArC,EAAqDH,IAArD;AACD,KAhBH;AAmBD,GArBQ,EAqBN,EArBM,CAAT,CAJe,CA8Bb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAID;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\nimport \"./components/App.scss\"\r\nimport PhotoCard from './components/PhotoCard';\r\n\r\n// const App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\nfunction App() {\r\n  \r\nconst [data, setData] = useState([]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"first render\");\r\n  axios.get(\"https://swapi.co/api/people/?format=json\")\r\n    .then(res => {\r\n      let  data = res.data\r\n      setData(res.data);\r\n\r\n    data = Object.entries(data);\r\n    console.log('App.js -> %cdata:', 'color: blue', data)\r\n    \r\n\r\n\r\n    .catch(error => {\r\n      console.error(\"index.js -> %c\\\"There's a data issue:\", \"color: red\", error);\r\n    });\r\n\r\n\r\n      console.log('App.js -> %cres.data:', 'color: green', data)\r\n    });\r\n    \r\n\r\n}, [] );\r\n\r\n\r\n\r\n\r\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  // return (\r\n  //   <div className=\"App\">\r\n  //   <div className=\"photoCards\">\r\n  //       {data.map(data => (\r\n          \r\n  //         <PhotoCard name={data.name} \r\n  //                           gender={data.gender} \r\n  //                           homeworld = {data.homeworld}\r\n  //                           url={data.url} /> \r\n                  \r\n  //       ))}\r\n  //     </div>\r\n  //     : <div>Loading...</div> \r\n  //   </div>\r\n\r\n\r\n    \r\n  // );\r\n\r\n  \r\n\r\n}\r\n\r\nexport default App;\r\n "]},"metadata":{},"sourceType":"module"}