{"ast":null,"code":"import _slicedToArray from \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport \"./components/App.scss\"; //import PhotoCard from './components/PhotoCard';\n\nimport { Image, Grid } from 'semantic-ui-react'; // const App = () => {\n// Try to think through what state you'll need for this app before starting. Then build out\n// the state properties here.\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"first render\");\n    axios.get(\"https://swapi.co/api/people\").then(res => {\n      let data = res.data;\n      setData(res.data.results); //data = Object.entries(data);\n\n      console.log('App.js -> %cdata:', 'color: blue', data); // .catch(error => {\n      //   console.error(\"index.js -> %c\\\"There's a data issue:\", \"color: red\", error);\n      // });\n\n      console.log('App.js -> %cres.data:', 'color: green', data);\n    });\n  }, []); // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"photoCards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, Array.from(data).map((data, key) => React.createElement(PhotoCard, {\n    name: data.name,\n    gender: data.gender,\n    species: data.species,\n    url: data.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), \": \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Loading...\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Repositories\\Sprint-Challenge-React-Wars\\src\\App.js"],"names":["React","useState","useEffect","axios","Image","Grid","App","props","data","setData","console","log","get","then","res","results","Array","from","map","key","name","gender","species","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP,C,CACA;;AACA,SAAUC,KAAV,EAAiBC,IAAjB,QAA6B,mBAA7B,C,CAGA;AACE;AACA;;AACF,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBAEIN,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,QAEbO,IAFa;AAAA,QAEPC,OAFO;;AAIpBP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAU,6BAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAKN,IAAI,GAAGM,GAAG,CAACN,IAAhB;AACAC,MAAAA,OAAO,CAACK,GAAG,CAACN,IAAJ,CAASO,OAAV,CAAP,CAFW,CAIb;;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,aAAjC,EAAgDH,IAAhD,EALa,CASb;AACA;AACA;;AAGEE,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,cAArC,EAAqDH,IAArD;AACD,KAhBH;AAmBD,GArBQ,EAqBN,EArBM,CAAT,CAJoB,CA8BlB;AACA;AACA;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,KAAK,CAACC,IAAN,CAAWT,IAAX,EAAiBU,GAAjB,CAAqB,CAACV,IAAD,EAAOW,GAAP,KAMpB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEX,IAAI,CAACY,IAAtB;AACkB,IAAA,MAAM,EAAEZ,IAAI,CAACa,MAD/B;AAEkB,IAAA,OAAO,EAAIb,IAAI,CAACc,OAFlC;AAGkB,IAAA,GAAG,EAAEd,IAAI,CAACe,GAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADL,CADA,QAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CADF;AAyBD;;AAED,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\nimport \"./components/App.scss\"\r\n//import PhotoCard from './components/PhotoCard';\r\nimport {  Image, Grid } from 'semantic-ui-react';\r\n\r\n\r\n// const App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\nfunction App(props) {\r\n  \r\nconst [data, setData] = useState([]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"first render\");\r\n  axios.get(\"https://swapi.co/api/people\")\r\n    .then(res => {\r\n      let  data = res.data\r\n      setData(res.data.results);\r\n\r\n    //data = Object.entries(data);\r\n    console.log('App.js -> %cdata:', 'color: blue', data)\r\n    \r\n\r\n\r\n    // .catch(error => {\r\n    //   console.error(\"index.js -> %c\\\"There's a data issue:\", \"color: red\", error);\r\n    // });\r\n\r\n\r\n      console.log('App.js -> %cres.data:', 'color: green', data)\r\n    });\r\n    \r\n\r\n}, [] );\r\n\r\n\r\n\r\n\r\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  return (\r\n    <div className=\"App\">\r\n    <div className=\"photoCards\">\r\n        {Array.from(data).map((data, key) => (\r\n          \r\n\r\n          \r\n\r\n \r\n          <PhotoCard name={data.name} \r\n                            gender={data.gender} \r\n                            species = {data.species}\r\n                            url={data.url} /> \r\n                  \r\n        ))}\r\n      </div>\r\n      : <div>Loading...</div> \r\n    </div>\r\n\r\n\r\n    \r\n  );\r\n\r\n  \r\n\r\n}\r\n\r\nexport default App;\r\n "]},"metadata":{},"sourceType":"module"}