{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport \"./components/App.scss\";\nimport PhotoCard from './components/PhotoCard'; // const App = () => {\n// Try to think through what state you'll need for this app before starting. Then build out\n// the state properties here.\n\nfunction App() {\n  // let data = \n  //   <div>\n  //     test data, yo.\n  //   </div>\n  useEffect(() => {\n    console.log(\"first render\");\n    axios.get(\"https://swapi.co/api/people/?format=json\").then(res => {\n      setCardData(res.data);\n      console.log('App.js -> %cres.data:', 'color: green', cardData);\n    });\n  }, []); // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, cardData.map(data => React.createElement(PhotoCard, {\n    name: cardData.name,\n    gender: cardData.gender,\n    homeworld: cardData.homeworld,\n    url: cardData.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), \": \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Loading...\"));\n}\n\nexport default App; //       <div className=\"App\">\n//  <PhotoCard name={cardData.name} \n//                   gender={cardData.gender} \n//                   homeworld = {cardData.homeworld}\n//                 // name={cardData.name}\n//                    url={cardData.url} /> \n//       : <div>Loading...</div> \n//   </div>\n// );\n//   }\n// export default App;","map":{"version":3,"sources":["C:\\Repositories\\Sprint-Challenge-React-Wars\\src\\App.js"],"names":["React","useState","useEffect","axios","PhotoCard","App","console","log","get","then","res","setCardData","data","cardData","map","name","gender","homeworld","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;AACE;AACA;;AACF,SAASC,GAAT,GAAe;AAEf;AACA;AACA;AACA;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAJ,IAAAA,KAAK,CAACK,GAAN,CAAU,0CAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAEXC,MAAAA,WAAW,CAACD,GAAG,CAACE,IAAL,CAAX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,cAArC,EAAqDM,QAArD;AACD,KALH;AAOD,GATQ,EASN,EATM,CAAT,CAPe,CAqBb;AACA;AACA;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACC,GAAT,CAAaF,IAAI,IAEhB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEC,QAAQ,CAACE,IAA1B;AACkB,IAAA,MAAM,EAAEF,QAAQ,CAACG,MADnC;AAEkB,IAAA,SAAS,EAAIH,QAAQ,CAACI,SAFxC;AAKmB,IAAA,GAAG,EAAEJ,QAAQ,CAACK,GALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADL,CADA,QAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,CADF;AAiBD;;AAED,eAAeb,GAAf,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\nimport \"./components/App.scss\"\r\nimport PhotoCard from './components/PhotoCard';\r\n\r\n// const App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\nfunction App() {\r\n    \r\n// let data = \r\n//   <div>\r\n//     test data, yo.\r\n//   </div>\r\n\r\nuseEffect(() => {\r\n  console.log(\"first render\");\r\n  axios.get(\"https://swapi.co/api/people/?format=json\")\r\n    .then(res => {\r\n  \r\n      setCardData(res.data);\r\n      console.log('App.js -> %cres.data:', 'color: green', cardData)\r\n    });\r\n    \r\n}, [] );\r\n\r\n\r\n\r\n\r\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  return (\r\n    <div className=\"App\">\r\n    <div className=\"cards\">\r\n        {cardData.map(data => (\r\n          \r\n          <PhotoCard name={cardData.name} \r\n                            gender={cardData.gender} \r\n                            homeworld = {cardData.homeworld}\r\n                     \r\n                            \r\n                             url={cardData.url} /> \r\n                  \r\n        ))}\r\n      </div>\r\n      : <div>Loading...</div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n \r\n//       <div className=\"App\">\r\n  \r\n//  <PhotoCard name={cardData.name} \r\n//                   gender={cardData.gender} \r\n//                   homeworld = {cardData.homeworld}\r\n//                 // name={cardData.name}\r\n                  \r\n//                    url={cardData.url} /> \r\n//       : <div>Loading...</div> \r\n\r\n    \r\n//   </div>\r\n\r\n// );\r\n\r\n//   }\r\n\r\n// export default App;"]},"metadata":{},"sourceType":"module"}