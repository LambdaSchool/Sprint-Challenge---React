{"ast":null,"code":"import _slicedToArray from \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Repositories\\\\Sprint-Challenge-React-Wars\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport \"./components/App.scss\";\nimport PhotoCard from './components/PhotoCard'; // const App = () => {\n// Try to think through what state you'll need for this app before starting. Then build out\n// the state properties here.\n\nfunction App() {\n  // let data = \n  //   <div>\n  //     test data, yo.\n  //   </div>\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardData = _useState2[0],\n        setCardData = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"first render\");\n    axios.get(\"https:henry-mock-nasa-api.herokuapp.com/api\").then(res => {\n      console.log(res.data);\n      setCardData(res.data);\n    });\n  }, []); // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(PhotoCard, {\n    title: cardData.title,\n    gender: cardData.gender,\n    homeworld: cardData.homeworld,\n    name: cardData.name,\n    url: cardData.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \": \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Loading...\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Repositories\\Sprint-Challenge-React-Wars\\src\\App.js"],"names":["React","useState","useEffect","axios","PhotoCard","App","cardData","setCardData","console","log","get","then","res","data","title","gender","homeworld","name","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;AACE;AACA;;AACF,SAASC,GAAT,GAAe;AAEf;AACA;AACA;AACA;AALe,oBAOiBJ,QAAQ,CAAC,EAAD,CAPzB;AAAA;AAAA,QAORK,QAPQ;AAAA,QAOEC,WAPF;;AAQfL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAU,6CAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB;AACAN,MAAAA,WAAW,CAACK,GAAG,CAACC,IAAL,CAAX;AACD,KAJH;AAMD,GARQ,EAQN,EARM,CAAT,CARe,CAqBb;AACA;AACA;;AACA,SAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,QAAQ,CAACQ,KAA3B;AACiB,IAAA,MAAM,EAAER,QAAQ,CAACS,MADlC;AAEiB,IAAA,SAAS,EAAIT,QAAQ,CAACU,SAFvC;AAGgB,IAAA,IAAI,EAAEV,QAAQ,CAACW,IAH/B;AAKkB,IAAA,GAAG,EAAEX,QAAQ,CAACY,GALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,QAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAFJ;AAiBC;;AAEH,eAAeb,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\nimport \"./components/App.scss\"\r\nimport PhotoCard from './components/PhotoCard';\r\n\r\n// const App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\nfunction App() {\r\n    \r\n// let data = \r\n//   <div>\r\n//     test data, yo.\r\n//   </div>\r\n\r\nconst [cardData, setCardData] = useState([]);\r\nuseEffect(() => {\r\n  console.log(\"first render\");\r\n  axios.get(\"https:henry-mock-nasa-api.herokuapp.com/api\")\r\n    .then(res => {\r\n      console.log(res.data);\r\n      setCardData(res.data);\r\n    });\r\n    \r\n}, []);\r\n\r\n\r\n\r\n\r\n  // Fetch characters from the star wars api in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  return (\r\n \r\n      <div className=\"App\">\r\n  \r\n <PhotoCard title={cardData.title} \r\n                  gender={cardData.gender} \r\n                  homeworld = {cardData.homeworld}\r\n                 name={cardData.name}\r\n                  \r\n                   url={cardData.url} /> \r\n      : <div>Loading...</div> \r\n\r\n    \r\n  </div>\r\n\r\n);\r\n\r\n  }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}